package com.example.datn.Service;

import com.example.datn.Entity.LichDatSan;
import com.example.datn.Repository.LichDatSanRepo;
import com.fasterxml.jackson.databind.JsonNode;
import lombok.RequiredArgsConstructor;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import java.math.BigDecimal;

@Service
@RequiredArgsConstructor
public class ThanhToanAutoService {

    private final LichDatSanRepo lichDatSanRepo;
    private final RestTemplate restTemplate = new RestTemplate();

    @Scheduled(fixedRate = 60000) // m·ªói 60 gi√¢y
    public void quetGiaoDichMB() {
        try {
            String apiUrl = "https://thueapi.pro/historyapimbbankv2/1c0f6f4998be5aa898928d0263ad08b0";
            JsonNode root = restTemplate.getForObject(apiUrl, JsonNode.class);

            if (root == null || !root.has("transactions")) {
                System.out.println("‚ùå Kh√¥ng c√≥ giao d·ªãch n√†o.");
                return;
            }

            JsonNode data = root.get("transactions");
            if (!data.isArray()) {
                System.out.println("‚ùå 'transactions' kh√¥ng ph·∫£i l√† m·∫£ng.");
                return;
            }

            System.out.println("üîÅ B·∫Øt ƒë·∫ßu qu√©t giao d·ªãch...");

            for (JsonNode node : data) {
                String description = node.path("description").asText();
                String amountStr = node.path("creditAmount").asText("0").replace(",", "").trim();

                BigDecimal amount = new BigDecimal(amountStr.isEmpty() ? "0" : amountStr);
                System.out.println("üìù N·ªôi dung: " + description);
                System.out.println("üí∞ S·ªë ti·ªÅn: " + amount);

                if (description.contains("SAMBA")) {
                    int idTaiKhoan = layIdTuNoiDung(description);
                    System.out.println("üë§ Tr√≠ch xu·∫•t ID t√†i kho·∫£n: " + idTaiKhoan);

                    if (idTaiKhoan == -1) continue;

                    LichDatSan lich = lichDatSanRepo
                            .findFirstByTaiKhoan_IdAndDaThanhToanFalseOrderByNgayTaoDesc(idTaiKhoan);

                    if (lich == null) {
                        System.out.println("‚ö† Kh√¥ng t√¨m th·∫•y l·ªãch ƒë·∫∑t s√¢n ch∆∞a thanh to√°n cho t√†i kho·∫£n ID: " + idTaiKhoan);
                        continue;
                    }

                    System.out.println("‚úÖ L·ªãch ƒë·∫∑t s√¢n t√¨m th·∫•y: ID #" + lich.getId() + " - Gi√° √°p d·ª•ng: " + lich.getGiaApDung());

                    if (lich.getGiaApDung().compareTo(amount) == 0) {
                        lich.setDaThanhToan(true);
                        lich.setTrangThai(1);
                        lichDatSanRepo.save(lich);
                        System.out.println("üéâ ƒê√£ DUY·ªÜT s√¢n t·ª± ƒë·ªông cho t√†i kho·∫£n ID: " + idTaiKhoan);
                    } else {
                        System.out.println("‚ùå S·ªë ti·ªÅn kh√¥ng kh·ªõp v·ªõi l·ªãch ƒë·∫∑t s√¢n.");
                    }
                }
            }

        } catch (Exception e) {
            System.err.println("‚ùå L·ªói khi qu√©t giao d·ªãch MB:");
            e.printStackTrace();
        }
    }

    private int layIdTuNoiDung(String nd) {
        try {
            if (nd.contains("SAMBA")) {
                String[] parts = nd.split("SAMBA");
                String raw = parts[1].trim(); // "1- Ma GD ACSP/..."
                String idStr = raw.split("[^0-9]")[0]; // l·∫•y "1"
                return Integer.parseInt(idStr);
            }
        } catch (Exception e) {
            System.err.println("‚ùå L·ªói khi tr√≠ch xu·∫•t ID t·ª´ n·ªôi dung: " + nd);
            e.printStackTrace();
        }
        return -1;
    }
}
